// #Sireum

package tc.TempControlSoftwareSystem

import org.sireum._
import tc._

// Do not edit this file as it will be overwritten if HAMR codegen is rerun
object OperatorInterfacePeriodic_p_tcproc_operatorInterface_GumboX {
  /** IEP-Post: Initialize Entrypoint Post-Condition
    *
    * @param api_setPoint outgoing data port
    */
  @strictpure def inititialize_IEP_Post (
      api_setPoint: TempControlSoftwareSystem.SetPoint_i): B =
    (// D-Inv-Guard: Datatype invariants for the types associated with operatorInterface's state variables and outgoing ports
     TempControlSoftwareSystem.SetPoint_i.D_Inv_SetPoint_i(api_setPoint))

  /** IEP-Post: Initialize Entrypoint Post-Condition via container
    *
    * @param post Container holding the value of incoming ports and the pre-state values of state variables
    */
  @strictpure def inititialize_IEP_Post_Container (post: OperatorInterfacePeriodic_p_tcproc_operatorInterface_PostState_Container_PS): B =
    inititialize_IEP_Post (
      api_setPoint = post.api_setPoint)

  /** CEP-Pre: Compute Entrypoint Pre-Condition for operatorInterface
    *
    * @param api_currentTemp incoming data port
    */
  @strictpure def compute_CEP_Pre (
      api_currentTemp: TempSensor.Temperature_i): B =
    (// D-Inv-Guard: Datatype invariants for the types associated with operatorInterface's state variables and incoming ports
     TempSensor.Temperature_i.D_Inv_Temperature_i(api_currentTemp))

  /** CEP-Pre: Compute Entrypoint Pre-Condition for operatorInterface via container
    *
    * @param pre Container holding the value of incoming ports and the pre-state values of state variables
    */
  @strictpure def compute_CEP_Pre_Container(pre: OperatorInterfacePeriodic_p_tcproc_operatorInterface_PreState_Container_PS): B =
    compute_CEP_Pre(
      api_currentTemp = pre.api_currentTemp)

  /** CEP-Post: Compute Entrypoint Post-Condition for operatorInterface
    *
    * @param api_setPoint outgoing data port
    */
  @strictpure def compute_CEP_Post (
      api_setPoint: TempControlSoftwareSystem.SetPoint_i): B =
    (// D-Inv-Guard: Datatype invariants for the types associated with operatorInterface's state variables and outgoing ports
     TempControlSoftwareSystem.SetPoint_i.D_Inv_SetPoint_i(api_setPoint))

  /** CEP-Post: Compute Entrypoint Post-Condition for operatorInterface via containers
    *
    * @param pre Container holding the values of incoming ports and the pre-state values of state variables
    * @param post Container holding the values of outgoing ports and the post-state values of state variables
    */
  @strictpure def compute_CEP_Post_Container(
      pre: OperatorInterfacePeriodic_p_tcproc_operatorInterface_PreState_Container_PS,
      post: OperatorInterfacePeriodic_p_tcproc_operatorInterface_PostState_Container_PS): B =
    compute_CEP_Post(
      api_setPoint = post.api_setPoint)
}
