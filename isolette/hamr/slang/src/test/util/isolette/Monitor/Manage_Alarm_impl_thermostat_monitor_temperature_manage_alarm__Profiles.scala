// #Sireum

package isolette.Monitor

import org.sireum._
import isolette.RandomLib

// Do not edit this file as it will be overwritten if HAMR codegen is rerun

// Profile with generators for incoming ports
@record class Manage_Alarm_impl_thermostat_monitor_temperature_manage_alarm_Profile_P(
  val name: String,
  val numTests: Z, // number of tests to generate
  var api_current_tempWstatus: RandomLib,
  var api_lower_alarm_temp: RandomLib,
  var api_monitor_mode: RandomLib,
  var api_upper_alarm_temp: RandomLib)

// Profile with generators for state variables and incoming ports
@record class Manage_Alarm_impl_thermostat_monitor_temperature_manage_alarm_Profile_PS(
  val name: String,
  val numTests: Z, // number of tests to generate
  var In_lastCmd: RandomLib,
  var api_current_tempWstatus: RandomLib,
  var api_lower_alarm_temp: RandomLib,
  var api_monitor_mode: RandomLib,
  var api_upper_alarm_temp: RandomLib)
