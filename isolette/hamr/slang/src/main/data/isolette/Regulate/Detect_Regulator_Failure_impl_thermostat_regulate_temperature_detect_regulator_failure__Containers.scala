// #Sireum

package isolette.Regulate

import org.sireum._
import isolette._

// Do not edit this file as it will be overwritten if HAMR codegen is rerun

// containers for the pre and post state values of ports and state variables

@sig trait Detect_Regulator_Failure_impl_thermostat_regulate_temperature_detect_regulator_failure_PreState_Container extends art.DataContent {
}

// container for incoming ports
@datatype class Detect_Regulator_Failure_impl_thermostat_regulate_temperature_detect_regulator_failure_PreState_Container_P (
  ) extends Detect_Regulator_Failure_impl_thermostat_regulate_temperature_detect_regulator_failure_PreState_Container

// container for incoming ports and state variables
@datatype class Detect_Regulator_Failure_impl_thermostat_regulate_temperature_detect_regulator_failure_PreState_Container_PS (
  ) extends Detect_Regulator_Failure_impl_thermostat_regulate_temperature_detect_regulator_failure_PreState_Container

@sig trait Detect_Regulator_Failure_impl_thermostat_regulate_temperature_detect_regulator_failure_PostState_Container extends art.DataContent {
  def api_internal_failure: Isolette_Data_Model.Failure_Flag_impl
}

// container for outgoing ports
@datatype class Detect_Regulator_Failure_impl_thermostat_regulate_temperature_detect_regulator_failure_PostState_Container_P (
  val api_internal_failure: Isolette_Data_Model.Failure_Flag_impl) extends Detect_Regulator_Failure_impl_thermostat_regulate_temperature_detect_regulator_failure_PostState_Container

// container for outgoing ports and state variables
@datatype class Detect_Regulator_Failure_impl_thermostat_regulate_temperature_detect_regulator_failure_PostState_Container_PS (
  val api_internal_failure: Isolette_Data_Model.Failure_Flag_impl) extends Detect_Regulator_Failure_impl_thermostat_regulate_temperature_detect_regulator_failure_PostState_Container
